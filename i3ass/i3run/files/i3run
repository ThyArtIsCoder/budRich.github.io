#!/bin/bash

NAME="i3run"
VERSION="0.001"
AUTHOR="budRich"
CONTACT='robstenklippa@gmail.com'
CREATED="2017-04-20"
UPDATED="2017-11-19"

main(){

  while getopts :c:i:t:e:l:gsvh option; do
    case "${option}" in
      i) acri=("-i" "${OPTARG}") ;;
      c) acri=("-c" "${OPTARG}") ;;
      t) acri=("-t" "${OPTARG}") ;;
      e) command="${OPTARG}"     ;;
      g) summon=0                ;;
      s) summon=1                ;;
      v) printf '%s\n' \
       "$NAME - version: $VERSION" \
       "updated: $UPDATED by $AUTHOR"
       exit ;;
      h|*) printinfo && exit ;;
    esac
  done

  summon=${summon:-0}

  declare -A gla

  alst=($(i3list "${acri[@]}"))

  gla[AWW]=${alst[0]}   #  current workspace
  gla[VIS]=${alst[1]}   #  visible containers
  gla[HID]=${alst[2]}   #  hidden containers
  gla[EXS]=${alst[3]}   #  existing containers (VIS+HID)
  gla[AWP]=${alst[4]}   #  Active window position (b|e|m|g|i)
  gla[AWS]=${alst[6]}   #  Active window status (f|a|n)
  gla[AWC]=${alst[7]}   #  Active window container (A|B|C|D|X)
  gla[AWI]=${alst[9]}   #  Active window id (con_id)
  gla[AWM]=${alst[10]}  #  Active window mark
  gla[TWP]=${alst[11]}  #  Target window position (b|e|m|g|i)
  gla[TWS]=${alst[13]}  #  Target window status (f|a|n)
  gla[TWC]=${alst[14]}  #  Target window container (A|B|C|D|X)
  gla[TWW]=${alst[15]}  #  Target window workspace
  gla[TWI]=${alst[16]}  #  Target window id (con_id)
  gla[TWM]=${alst[17]}  #  Target window mark
  gla[WSF]=${alst[44]}  #  Workspace number whith i3fyra layout

  # if window doesn't exist, launch the command.
  if [[ ${gla[TWI]} = X ]]; then
    eval "${command}" & 
    # eval "${command}" > /dev/null 2>&1 & 
    i3get -y ${acri[@]}
    exit
  fi

  # if target window is active (current), send it to the scratchpad.
  # else focus target window.
  if [[ ${gla[AWI]} = "${gla[TWI]}" ]]; then
    if [[ ${gla[TWC]} = X ]]; then
      [[ ${gla[TWP]} != 'g' ]] && fs=t || fs=f
      i3-msg -q "[con_id=${gla[TWI]}]" \
      mark "$fs-${gla[TWI]}", \
      move scratchpad
    fi
  else
    # window is not handled by i3fyra and not active
    if [[ ${gla[TWC]} = X ]]; then

      if [[ ${gla[AWW]} != "${gla[TWW]}" ]]; then

        if [[ -n ${gla[TWM]} ]]; then
          ofs=${gla[TWM]%%'-'*}
          [[ $ofs = 'f' ]] \
            && fs=enable || fs=disable
        else
          [[ ${gla[TWP]} = g ]] \
            && fs=enable || fs=disable
        fi
        
        if [[ ${gla[AWW]} = "-1" ]] || [[ $summon = 1 ]]; then
          i3-msg -q "[con_id=${gla[TWI]}]" \
            move to workspace "${gla[AWW]}", \
            floating $fs
        else
          i3-msg -q workspace "${gla[TWW]}"
        fi
        
      fi
    else
      # window is handled by i3fyra and not active
      if [[ ${gla[AWW]} != "${gla[TWW]}" ]]; then
        # window is not on current ws
        if [[ ${gla[WSF]} =~ "X"|"${aws[AWW]}" ]]; then
          # current ws is i3fyra WS
          [[ ${gla[TWC]} =~ [${gla[HID]}] ]] && echo "ollon" && i3fyra -s "${gla[TWC]}"
        else
          # current ws is not i3fyra WS
          if [[ ${gla[AWW]} = "-1" ]] || [[ $summon = 1 ]]; then
            echo "apa"
            i3-msg -q "[con_id=${gla[TWI]}]" move to workspace "${gla[AWW]}"
          else
            echo "rapa"
            i3-msg -q workspace "${gla[TWW]}"
          fi
        fi
      fi
    fi
    i3-msg "[con_id=${gla[TWI]}]" focus > /dev/null 2>&1
  fi

  echo "${gla[TWI]}"
}

printinfo(){
  case "$1" in
    m ) printf '%s' "${about}" ;;
    
    f ) 
      printf '%s' "${bouthead}"
      printf '%s' "${about}"
      printf '%s' "${boutfoot}"
    ;;

    ''|* ) 
      printf '%s' "${about}" | awk '
         BEGIN{ind=0}
         $0~/^```/{
           if(ind!="1"){ind="1"}
           else{ind="0"}
           print ""
         }
         $0!~/^```/{
           gsub("[`*]","",$0)
           if(ind=="1"){$0="   " $0}
           print $0
         }
       '
    ;;
  esac
}

bouthead="
${NAME^^} 1 ${CREATED} Linux \"User Manuals\"
=======================================

NAME
----
"

boutfoot="
AUTHOR
------

${AUTHOR} <${CONTACT}>
<https://budrich.github.io>

SEE ALSO
--------

i3(1), i3list(1), i3get(1)
"

about='
`i3run` - Run, Raise or hide windows in i3wm

SYNOPSIS
--------

`i3ass` `-h`|`-v`|`-i`|`-c`|`-t` [*CRITERIA*] [`-e` *COMMAND*]

DESCRIPTION
-----------

This is a run or raise or hide script for i3wm.
It looks for a window matching a given criteria.

These are the actions taken depending on the state of the found window:

| **target window state**          | **action**
|:---------------------------------|:-----------------
| Active and not handled by i3fyra | mark and hide
| Active and handled by i3fyra     | do nothing
| Handled by i3fyra and hidden     | show container, activate
| Not handled by i3fyra and hidden | show window, activate
| Not on current workspace         | goto workspace
| Not found                        | run command

Hidden in this context, means that window is on scratchpad/
Show in this context means, move window to current workspace.

OPTIONS
-------

`-v`
  Show version info and exit 

`-h`
  Show this help and exit    

`-c` *CLASS*
  Search for windows with the given CLASS

`-i` *INSTANCE*
  Search for windows with the given INSTANCE

`-t` *TITLE*
  Search for windows with the given TITLE

`-e` *COMMAND*
  Command to run if no window is found.

`-s` 
  Instead of switching workspace,
  summon window to current workspace

it is important that `-e` *COMMAND* is last of the options.
`-e` is optional, if no *COMMAND* is passed and no window is found, nothing happens.
It is also important that *COMMAND* will spawn a window matching the criteria,
otherwise the script will get stuck in a loop waiting for the window to appear.

DEPENDENCIES
------------

[i3list](/i3ass/i3list)
[i3get](/i3ass/i3get) 
'

if [ "$1" = "md" ]; then
  printinfo m
  exit
elif [ "$1" = "man" ]; then
  printinfo f
  exit
else
  main "${@}"
fi
