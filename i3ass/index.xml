<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>i3ass on budRich.github.io - Boiling rice in coffe</title>
    <link>https://budrich.github.io/i3ass/</link>
    <description>Recent content in i3ass on budRich.github.io - Boiling rice in coffe</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Wed, 20 Sep 2017 15:44:11 +0200</lastBuildDate>
    
	<atom:link href="https://budrich.github.io/i3ass/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>README</title>
      <link>https://budrich.github.io/i3ass/readme/</link>
      <pubDate>Sun, 19 Nov 2017 22:20:17 +0200</pubDate>
      
      <guid>https://budrich.github.io/i3ass/readme/</guid>
      <description>i3ass - i3 assistance scripts    script function     i3fyra An advanced simple layout   i3run Run, Raise or hide a window   i3get Get information about i3   i3cast Create and upload screenrecordings   i3list Get lots of information about i3   i3gw Ghost window wrapper script   i3mtm Move window to a chosen mark   i3term Launch a program inside a terminal   i3zen Move a window to the zenter    license All i3ass scripts are licensed with the MIT license</description>
    </item>
    
    <item>
      <title>i3fyra</title>
      <link>https://budrich.github.io/i3ass/i3fyra/</link>
      <pubDate>Sun, 19 Nov 2017 22:20:17 +0200</pubDate>
      
      <guid>https://budrich.github.io/i3ass/i3fyra/</guid>
      <description>An advanced simple tiling layout for i3wm fyra is the Swedish name for &amp;ldquo;four&amp;rdquo;.
 www.youtube.com/watch?v=kU8gb6WLFk8    .
www.youtube.com/watch?v=t4Tve-xpwus    In the first video above I show the functionality of i3fyra. The second video is a longer and more thorough walkthrough on how to use i3fyra
dependencies  i3list i3gw  The layout consists of four containers:
A B C D  The internal layout of the containers doesn&amp;rsquo;t matter.</description>
    </item>
    
    <item>
      <title>i3list</title>
      <link>https://budrich.github.io/i3ass/i3list/</link>
      <pubDate>Sun, 19 Nov 2017 22:20:17 +0200</pubDate>
      
      <guid>https://budrich.github.io/i3ass/i3list/</guid>
      <description>This script is vital for i3fyra to work. But it can be used on it&amp;rsquo;s own or with other scripts. i3list is also used by i3run. i3list parses the output of the command:
i3-msg -t get_tree
and returns a long string with 43 values separated by spaces. This strange output format is made to make it possible to pipe the output to other scripts. A lot of the information is specific to i3fyra, but if i3list doesn&amp;rsquo;t find a value an X will be placed in it&amp;rsquo;s place in the output.</description>
    </item>
    
    <item>
      <title>i3term</title>
      <link>https://budrich.github.io/i3ass/i3term/</link>
      <pubDate>Sun, 19 Nov 2017 22:20:17 +0200</pubDate>
      
      <guid>https://budrich.github.io/i3ass/i3term/</guid>
      <description>I just made this script to keep my i3config cleaner. It probably needs tweaking if someone other then budRich uses it ;)
Launch a command in a new urxvt window Uses i3run to run or raise a window with the instancename: COMMAND. If no window is found, COMMAND is ran in a urxvt window with the same instance name as COMMAND. When the command exits window is cleared and returned to bash.</description>
    </item>
    
    <item>
      <title>i3zen</title>
      <link>https://budrich.github.io/i3ass/i3zen/</link>
      <pubDate>Wed, 20 Sep 2017 22:38:48 +0200</pubDate>
      
      <guid>https://budrich.github.io/i3ass/i3zen/</guid>
      <description> I made a post on /r/unixporn where you can view an animated gif of i3zen in action.
Put the window between two ghosts (centered). if the window already is &amp;ldquo;zen&amp;rdquo;, move it back to its original workspace. If the window is not in zen but another window is, both of them will be zen in a tabbed container.
usage $ i3zen [OPTION] ARGUMENT
   option argument function     -v  show version info and exit   -h  show this help and exit    dependencies  i3get i3gw  </description>
    </item>
    
    <item>
      <title>i3run</title>
      <link>https://budrich.github.io/i3ass/i3run/</link>
      <pubDate>Wed, 20 Sep 2017 22:36:11 +0200</pubDate>
      
      <guid>https://budrich.github.io/i3ass/i3run/</guid>
      <description>run, raise or minimize a program depending on its state. if target window doesn&amp;rsquo;t exist, a given command is launched. if target window is on another workspace, it is moved to current workspace. If target window doesn&amp;rsquo;t have focus it will be given focus. If target window has focus it will be sent to the scratchpad.
usage run i3run with ONE of the following options to define target window:</description>
    </item>
    
    <item>
      <title>i3mtm</title>
      <link>https://budrich.github.io/i3ass/i3mtm/</link>
      <pubDate>Wed, 20 Sep 2017 22:32:24 +0200</pubDate>
      
      <guid>https://budrich.github.io/i3ass/i3mtm/</guid>
      <description>mtm = Move To Mark When launched without flags, i3mtm checks floating status of current window. If it is tiled, the window becomes floating. if it is floating, a search for marks is done if no marks are found, window becomes tiled. otherwise a dmenu asks for a mark to move window to. if no selection is made, window is tiled but not moved. otherwise window is tiled and moved to selected mark.</description>
    </item>
    
    <item>
      <title>i3gw</title>
      <link>https://budrich.github.io/i3ass/i3gw/</link>
      <pubDate>Wed, 20 Sep 2017 22:24:23 +0200</pubDate>
      
      <guid>https://budrich.github.io/i3ass/i3gw/</guid>
      <description>wrapper for the ghost window function in i3wm
i3-msg has an undocumented function (open) that creates empty containers, or as I call them: ghosts. Since these empty containers doesn&amp;rsquo;t contain any windows there is no instance/class/title to identify them, making it difficult to control them. They do however have a con_id and I found the easiest way to keep track of the ghosts is to mark them. That is what this script does, it creates a ghost get its con_id and mark it.</description>
    </item>
    
    <item>
      <title>i3get</title>
      <link>https://budrich.github.io/i3ass/i3get/</link>
      <pubDate>Wed, 20 Sep 2017 22:22:45 +0200</pubDate>
      
      <guid>https://budrich.github.io/i3ass/i3get/</guid>
      <description>Get information about a window Search for windows in i3 tree and print requested information. If no arguments are passed. con_id of active window is returned.
usage i3get [OPTION CRITERIA] | option | criteria | function | |:-------|:---------|:---------------------------| | -v | | show version and exit | -h | | show this help | -a | | currently active window (default) | -c | CLASS | search for windows with the given class | -i | INSTANCE | search for windows with the given instance | -t | TITLE | search for windows with title.</description>
    </item>
    
    <item>
      <title>i3cast</title>
      <link>https://budrich.github.io/i3ass/i3cast/</link>
      <pubDate>Wed, 20 Sep 2017 22:20:17 +0200</pubDate>
      
      <guid>https://budrich.github.io/i3ass/i3cast/</guid>
      <description> usage just run the script to start the recording run it again to stop and preview the recording and perform action, (save,upload or play again). if no action is selected the recording is deleted. uploaded recordings is also saved.
a notification is shown when upload is complete and a link is put in your clipboard.
protip
bindsym --release Mod3+Pint exec --no-startup-id i3cast
requirements    i3get to identify and the terminal (urxvt) window     i3run to run and hide the terminal (urxvt) window   urxvt terminal emulator   ffmpeg  commandline tool to record media   curl commandline tool to download and upload stuff   mpv minimal mediaplayer, used to preview recording   dmenu tool that displays a menu   xclip tool that handles clipboard events   xdotool needed to send q to urxvt, to quit the recording in a proper way   gif-is-jifâ€ƒ to save and upload gif format (optional)    </description>
    </item>
    
  </channel>
</rss>