#!/bin/bash

NAME="igi"
VERSION="0.001"
AUTHOR="budRich"
CONTACT='robstenklippa@gmail.com'
CREATED="2017-09-30"
UPDATED="2017-09-30"

about="
$NAME - $VERSION - $UPDATED
created: $CREATED by $AUTHOR
*******************************
igi - I got issues
------------------
This script creates a issuefile and move it to \`/etc/issue\`.
The file will use the colors defined in \`.Xresources\` and
use \`toilet\`, \`fortune\` and \`lolcat\` to create a 
centered fullscreen issue file.

usage
-----
\`\$ $NAME [OPTION] ARGUMENT\`

| option | argument | function                   |
|:-------|:---------|:---------------------------|
| -v     |          | show version info and exit |
| -h     |          | show this help and exit    |

dependencies
------------
- DEPENDENCY

contact
-------
$CONTACT
"

while getopts :vh option
do
  case "${option}" in
    v) printf '%s\n' \
         "$NAME - version: $VERSION" \
         "updated: $UPDATED by $AUTHOR"
       exit ;;
    h) printf '%s\n' "${about}" && exit ;;
  esac
done


# get an active tty
AT=$(w | awk '$2~/tty/ {print $2;exit}')

# thank you alfunx for the stty commands
TERMH=$(stty -a </dev/"$AT" | grep -Po '(?<=rows )\d+')
TERMW=$(stty -a </dev/"$AT" | grep -Po '(?<=columns )\d+')

MAX_LINES=6 # Maximum number of lines to display
WRAP=17     # On which Collumn to wrap fortune
FONT="3d.flf" # figlet font to use
# FONT=rustofat.tlf
LOLCAT_OPTIONS='-p 10'
TOILET_OPTIONS=(-w ${TERMW} -f "${FONT}")
FORTUNE_OPTIONS=("$HOME/etc/fortunes/budcol")

# todo, check if font exist, if not set default font..
# /usr/share/figlet

OFS=${IFS} # save original Field Separor
LFS=$'\n'  # Separate on lines

# extract colorscheme from xrdb and translate it for issue
getcolors(){
  IFS=${OFS}
  xrdb=( $(xrdb -query | grep -P "color[0-9]*:" | sort | cut -f 2-) )
  for c in ${!xrdb[@]}; do
    case $c in
       19) echo -en "\e]PC${xrdb[$c]:1}" ;;
       30) echo -en "\e]P8${xrdb[$c]:1}" ;;
       0)  echo -en "\e]P0${xrdb[$c]:1}" ;;
       7)  echo -en "\e]P1${xrdb[$c]:1}" ;;
       15) echo -en "\e]P9${xrdb[$c]:1}" ;;
       8)  echo -en "\e]P2${xrdb[$c]:1}" ;;
       1)  echo -en "\e]PA${xrdb[$c]:1}" ;;
       9)  echo -en "\e]P3${xrdb[$c]:1}" ;;
       2)  echo -en "\e]PB${xrdb[$c]:1}" ;; 
       10) echo -en "\e]P4${xrdb[$c]:1}" ;;
       11) echo -en "\e]P5${xrdb[$c]:1}" ;;
       4)  echo -en "\e]PD${xrdb[$c]:1}" ;;
       12) echo -en "\e]P6${xrdb[$c]:1}" ;;
       5)  echo -en "\e]PE${xrdb[$c]:1}" ;;
       13) echo -en "\e]P7${xrdb[$c]:1}" ;;
       6)  echo -en "\e]PF${xrdb[$c]:1}" ;;
    esac
  done
  echo -en "\e[2J"
}

# get a random fortune, fold it and check if it doesn't exceed maximum lines
getfortune(){
  IFS=${LFS}

  fh=0 # fontheight
  fw=0 # fontwidth
  lchk=$((MAX_LINES+1)) # fortune lines

  while [[ $lchk -gt $MAX_LINES ]]; do
    # -s flag makes sure fold wraps on spaces
    # sed removes leading whitespace
    # todo: translate multiple spaces and tabs to single space..
    frt=($(fortune ${FORTUNE_OPTIONS[@]} | sed -e 's/^[[:space:]]*//' | fold -s -w${WRAP}))
    lchk=${#frt[@]}
  done

  # format fortune
  for l in ${frt[@]}; do
    toi=$(echo "${l}" | toilet ${TOILET_OPTIONS[@]} )
    # dimensions of formated text

    tlh=$(printf '%s' "${toi}" | wc -l)
    [[ $tlh -gt $fh ]] && fh=$tlh

    tlw=$(printf '%s' "${toi}" | wc -L)
    [[ $tlw -gt $fw ]] && fw=$tlw
    # IFS=$OIFS
    text2+=("${toi}")
  done

  # centerfortune
  vpad=$(((TERMH-(fh*lchk))/2)) # vertical padding 
  hpad=$(((TERMW-fw)/2))        # horizontal padding
  for (( i = 2; i < vpad; i++ )); do
    echo
  done
  for l in ${text2[@]}; do
    printf "%${hpad}s"
    printf '%s\n' "${l}" 
  done
  echo
}

if [[ $1 = test ]]; then
  clear
  getfortune | lolcat -f ${LOLCAT_OPTIONS}
else
  rm -f /tmp/issue
  getcolors > /tmp/issue
  # getfortune >> /tmp/issue
  getfortune | lolcat -f ${LOLCAT_OPTIONS} >> /tmp/issue
  sudo mv -f /tmp/issue /etc/issue
fi

