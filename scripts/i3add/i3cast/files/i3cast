#!/bin/bash

NAME="i3cast"
VERSION="0.2"
AUTHOR="budRich"
CONTACT='robstenklippa@gmail.com'
CREATED="2017-09-19"
UPDATED="2017-12-17"

I3CAST_PLAYER=${I3CAST_PLAYER:-mpv}
I3CAST_FOLDER=${I3CAST_FOLDER:-$HOME/Videos}

play(){
  ${I3CAST_PLAYER} "$TMP_FILE"
  choice=$(printf '%s\n' "play" "upload" "save" | rofi -dmenu -p "action: ")
  if [[ -z $choice ]]; then
    rm "$TMP_FILE"
    exit
  fi
  case $choice in
    play ) play ;;
    upload ) upload ;;
    save ) save ;;
  esac
}


upload(){
  save
  choice=$(echo -e "${HOSTS}" | rofi -dmenu -p "select host: ")
  [[ -z $choice ]] && exit 
  case $choice in
    'ptpb.pw' ) 
      pst=$(curl --form "c=@${SAVED}" https://ptpb.pw/)
      pst=$(printf '%s' "${pst}" | awk -F':' '$1=="url"{$1="";print $2 ":" $3}')
    ;;

    gfycat    ) 
      pst=$(${GIF_IS_JIF} "${SAVED}")
      pst=$(printf '%s' "${pst}" | awk '$NF ~ "http"{print $NF}')
    ;;
  esac
  
  echo -n "${pst}" | xsel -ib
  echo -n "${pst}" | xsel -ip
  notify-send "Upload complete: $pst"
}

save(){
  choice=$(rofi -dmenu -p "name: ")
  if [[ -z $choice ]]; then
    rm "$TMP_FILE"
    exit
  fi
  ext=$(printf '%s\n' "mkv" "gif" | rofi -dmenu -p "output as: ")
  SAVED="$I3CAST_FOLDER/${choice}.${ext}"
  mkdir -p "$I3CAST_FOLDER"

  if [[ $ext = gif ]]; then
    # Send the notification
    rm -rf /tmp/frames
    mkdir -p /tmp/frames
    ffmpeg -i "$TMP_FILE" -r 10 /tmp/frames/ffout%03d.png
    rm -rf "$TMP_FILE"
    gifski -o "$SAVED" --quality 80 -W 600 --fast /tmp/frames/*.png
    rm -rf /tmp/frames
    notify-send "$SAVED saved"
  else
    mv "$TMP_FILE" "$SAVED"
  fi
  notify-send "file saved $SAVED"
  if [[ $choice = play ]]; then
    echo -n "${SAVED}" | xsel -ib
    echo -n "${SAVED}" | xsel -ip
  fi

}

newcast(){
  size=$(printf '%s\n' "full" "select" | rofi -dmenu -p 'new cast: ')
  [[ $size = full ]] \
    && size="$(xdpyinfo | grep dimensions | awk '{print $2;}')" && pos="0.0"
  [[ $size = select ]] && asel=($(slop -f '%wx%h %x,%y')) \
    && size="${asel[0]}" && pos="${asel[1]}"
  [[ -z $size ]] && exit
  COMMAND="ffmpeg -y -f x11grab -s $size -i :0.0+$pos "
  COMMAND+="-f alsa -i default -c:v libx264 -preset ultrafast "
  COMMAND+="-crf 0 -acodec mp3 $TMP_FILE"
  termcmd="urxvtc -name castterm -e bash -c '${COMMAND}'"
}

main(){
  while getopts :vh option
  do
    case "${option}" in
      v) printf '%s\n' \
           "$NAME - version: $VERSION" \
           "updated: $UPDATED by $AUTHOR"
         exit ;;
      h|*) printinfo && exit ;;
    esac
  done

  # to add gfycat as an host, enter path to gif-is-jif
  # GIF_IS_JIF=
  GIF_IS_JIF="$HOME/src/gif-is-jif.bash"


  # DON'T CHANGE THIS VAR
  HOSTS="ptpb.pw"

  # Filename and location of recording before saving
  TMP_FILE=/tmp/cast/tmpcast.mkv

  [[ ! -x $GIF_IS_JIF ]] && HOSTS+="\ngfycat"

  cid=$(i3get -i castterm -r d)

  if [[ -z $cid ]]; then
    newcast
    echo "$termcmd"
    mkdir -p ${TMP_FILE%/*}
    rm -f "$TMP_FILE"
    # start recording
    i3run -i castterm -e "$termcmd"
    # send it to scratchpad
    i3-msg "[instance=castterm]" move scratchpad
  else
    # stop recording, focus castterm
    i3run -i castterm
    sleep .6
    # send key q to castterm to stop recording and kill the window
    xdotool windowactivate "${cid}"
    xdotool key q
    play
  fi
}

printinfo(){
  case "$1" in
    m ) printf '%s' "${about}" ;;
    
    f ) 
      printf '%s' "${bouthead}"
      printf '%s' "${about}"
      printf '%s' "${boutfoot}"
    ;;

    ''|* ) 
      printf '%s' "${about}" | awk '
         BEGIN{ind=0}
         $0~/^```/{
           if(ind!="1"){ind="1"}
           else{ind="0"}
           print ""
         }
         $0!~/^```/{
           gsub("[`*]","",$0)
           if(ind=="1"){$0="   " $0}
           print $0
         }
       '
    ;;
  esac
}

bouthead="
${NAME^^} 1 ${CREATED} Linux \"User Manuals\"
=======================================

NAME
----
"

boutfoot="
AUTHOR
------

${AUTHOR} <${CONTACT}>
<https://budrich.github.io>

SEE ALSO
--------

gifski(1), i3get(1), i3run(1), urxvt(1), ffmpeg(1), 
i3(1), curl(1), mpv(1), rofi(1), xsel(1), xdotool(1), 
[gif-is-jif](https://github.com/markasoftware/gif-is-jif), slop(1)
"

about='
`i3cast` - Create and upload screen recordings

SYNOPSIS
--------

`i3cast` [`-v`|`-h`]

DESCRIPTION
-----------

Just run the script to start the recording 
run it again to stop and preview the recording 
and perform action, (save,upload or play again). 
if no action is selected the recording is deleted. 
uploaded recordings is also saved.  

A notification is shown when upload is complete and 
a link is put in your clipboard.  

**protip**  
`bindsym --release Mod3+Print exec --no-startup-id i3cast`

OPTIONS
-------

`-v`
  Show version and exit.

`-h`
  Show help and exit.

FILES
-----

*/tmp/cast/tmpcast.mkv*
  Where the recording is stored before saving and/or upload.

ENVIRONMENT
-----------

`I3CAST_PLAYER`
  Video player to use to preview recording. Defaults to `mpv`  

`I3CAST_FOLDER`
  Folder to save recordings to. Defaults to *~/Videos*
  

DEPENDENCIES
------------

gifski
i3get
i3run
slop
urxvt
ffmpeg
curl
mpv
rofi
xsel
xdotool
[gif-is-jif](https://github.com/markasoftware/gif-is-jif) *(optional)*
'

if [ "$1" = "md" ]; then
  printinfo m
  exit
elif [ "$1" = "man" ]; then
  printinfo f
  exit
else
  main "${@}"
fi
